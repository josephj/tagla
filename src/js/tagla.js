(function() {
  var ATTRS, Tagla, proto,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __hasProp = {}.hasOwnProperty;

  ATTRS = {
    NAME: 'Tagla',
    PREFIX: 'tagla-',
    DRAG_ATTR: {
      containment: '.tagla',
      handle: '.tagla-icon'
    },
    SELECT_ATTR: {
      placeholder_text_single: 'Select an option',
      width: '310px'
    },
    FORM_TEMPLATE: [].join('\n'),
    TAG_TEMPLATE: ['<div class="tagla-tag">', '    <i class="tagla-icon fs fs-tag"></i>', '    <span class="tagla-label">', '      {{label}}', '      <a href="javascript:void(0)" class="tagla-tag-link tagla-tag-edit-link">', '        <i class="fs fs-pencil"></i> Edit', '      </a>', '      <a href="javascript:void(0)" class="tagla-tag-link tagla-tag-delete-link">', '        <i class="fs fs-cross3"></i> Delete', '      </a>', '    </span>', '    <div class="tagla-dialog">', '        {{#image}}', '        <div class="tagla-dialog-image">', '          <img src="{{image}}">', '        </div>', '        {{/image}}', '        <div class="tagla-dialog-text">', '          <h2 class="tagla-dialog-title">{{label}}</h2>', '          <div class="tagla-dialog-price">{{price}}</div>', '          <p class="tagla-dialog-description">{{description}}</p>', '          <a href="{{url}}" class="tagla-dialog-button st-btn st-btn-success st-btn-solid">', '            <i class="fs fs-cart"></i>', '            Buy Now', '          </a>', '        </div>', '    </div>', '    <form class="tagla-form">', '        <input type="hidden" name="x">', '        <input type="hidden" name="y">', '        <select data-placeholder="Search" type="text" name="label" class="tagla-select chosen-select" placeholder="Search">', '            <option>Frankie Issue #6</option>', '            <option>Frankie Wall Calendar 2015</option>', '            <option>Frankie A5 Daily Planner</option>', '        </select>', '    </form>', '</div>'].join('\n'),
    NEW_TAG_TEMPLATE: ['<div class="tagla-tag">', '    <i class="tagla-icon fs fs-tag"></i>', '    <span class="tagla-label">{{label}}</span>', '</div>'].join('\n')
  };

  Tagla = (function(_super) {
    __extends(Tagla, _super);

    function Tagla($wrapper, options) {
      if (options == null) {
        options = {};
      }
      Tagla.__super__.constructor.call(this);
      this.wrapper = $($wrapper);
      this.init(options);
      this.bind();
    }

    return Tagla;

  })(Stackla.Base);

  $.extend(Tagla, ATTRS);

  proto = {
    formatFloat: function(num, pos) {
      var size;
      size = Math.pow(10, pos);
      return Math.round(num * size) / size;
    },
    toString: function() {
      return 'Tagla';
    },
    _applyTools: function($tag) {
      var drag;
      drag = new Draggabilly($tag[0], Tagla.DRAG_ATTR);
      drag.on('dragEnd', $.proxy(this.handleTagMove, this));
      drag.disable();
      $tag.data('draggabilly', drag);
      $tag.find('.tagla-select').chosen(Tagla.SELECT_ATTR);
      return $tag.find('.tagla-select').on('change', $.proxy(this.handleTagChange, this));
    },
    _removeTools: function($tag) {
      var $select;
      $tag.data('draggabilly').destroy();
      $select = $tag.find('.tagla-select');
      $select.show().removeClass('chzn-done');
      return $select.next().remove();
    },
    _getPosition: function($tag) {
      var pos, x, y;
      this.log('_getPosition() is executed');
      pos = $tag.position();
      x = (pos.left + ($tag.width() / 2)) / this.currentWidth * this.naturalWidth;
      y = (pos.top + ($tag.height() / 2)) / this.currentHeight * this.naturalWidth;
      if (this.unit === 'percent') {
        x = x / this.naturalWidth * 100;
        y = y / this.naturalHeight * 100;
      }
      return [x, y];
    },
    _updateImageSize: function(data) {
      this.log('_updateImageSize() is executed');
      this.naturalWidth = data.naturalWidth;
      this.naturalHeight = data.naturalHeight;
      this.currentWidth = data.width;
      this.currentHeight = data.height;
      this.widthRatio = data.widthRatio;
      return this.heightRatio = data.heightRatio;
    },
    handleTagClick: function(e) {
      var $tag;
      e.preventDefault();
      e.stopPropagation();
      if (!$(e.target).hasClass('tagla-icon')) {
        return;
      }
      this.log('handleTagClick() is executed');
      $tag = $(e.currentTarget);
      this.shrink($tag);
      $tag.addClass('tagla-tag-active');
      return $tag.data('draggabilly').enable();
    },
    handleTagChange: function(e, params) {
      var $tag;
      this.log('handleTagChange() is executed');
      $tag = $(e.target).parents('.tagla-tag');
      $tag.removeClass('tagla-tag-choose tagla-tag-active');
      console.log(params);
      return this.emit('change', [params]);
    },
    handleTagDelete: function(e) {
      var $tag, instance;
      this.log('handleTagDelete() is executed');
      e.preventDefault();
      $tag = $(e.currentTarget).parents('.tagla-tag');
      $tag.remove();
      instance = $tag.data('draggabilly');
      if (instance) {
        instance.destroy();
      }
      return this.emit('delete', [$tag.data('tag-data')]);
    },
    handleTagEdit: function(e) {
      var $tag;
      this.log('handleTagDelete() is executed');
      e.preventDefault();
      $tag = $(e.currentTarget).parents('.tagla-tag');
      $tag.addClass('tagla-tag-choose');
      $tag.find('.tagla-select').trigger('chosen:open');
      return this.emit('tagla:edit', [$tag.data('tag-data')]);
    },
    handleTagMove: function(instance, event, pointer) {
      var $tag, data, pos;
      this.log('handleTagMove() is executed');
      $tag = $(instance.element);
      data = $tag.data('tag-data');
      pos = this._getPosition($tag);
      data.x = pos[0];
      data.y = pos[1];
      return this.emit('move', [pos, data, $tag]);
    },
    handleWrapperClick: function(e) {
      this.log('handleWrapperClick() is executed');
      return this.shrink();
    },
    handleImageResize: function(e, data) {
      var prevHeight, prevWidth;
      this.log('handleImageResize() is executed');
      prevWidth = this.currentWidth;
      prevHeight = this.currentHeight;
      $('.tagla-tag').each(function() {
        var $tag, pos, x, y;
        $tag = $(this);
        pos = $tag.position();
        x = (pos.left / prevWidth) * data.width;
        y = (pos.top / prevHeight) * data.height;
        return $tag.css({
          left: x + "px",
          top: y + "px"
        });
      });
      return this._updateImageSize(data);
    },
    addTag: function(tag) {
      var $tag, isNew, offsetX, offsetY, x, y;
      if (tag == null) {
        tag = {};
      }
      this.log('addTag() is executed');
      $tag = $(Mustache.render(this.tagTemplate, tag));
      isNew = $.isEmptyObject(tag);
      this.wrapper.append($tag);
      if (isNew) {
        tag.x = 50;
        tag.y = 50;
        $tag.addClass('tagla-tag-new tagla-tag-active tagla-tag-choose');
      }
      if (this.unit === 'percent') {
        x = this.currentWidth * (tag.x / 100);
        y = this.currentHeight * (tag.y / 100);
      } else {
        x = tag.x * this.widthRatio;
        y = tag.y * this.heightRatio;
      }
      offsetX = $tag.outerWidth() / 2;
      offsetY = $tag.outerHeight() / 2;
      $tag.css({
        left: (x - offsetX) + "px",
        top: (y - offsetY) + "px"
      });
      $tag.data('tag-data', tag);
      if (this.editor) {
        this._applyTools($tag);
        if (isNew) {
          $tag.data('draggabilly').enable();
          $tag.addClass('tagla-tag-choose');
          return $tag.find('.tagla-select').trigger('chosen:open');
        }
      }
    },
    deleteTag: function($tag) {
      return this.log('deleteTag() is executed');
    },
    edit: function() {
      if (this.editor === true) {
        return;
      }
      this.log('edit() is executed');
      this.wrapper.addClass('tagla-editing');
      $('.tagla-tag').each(function() {
        return this._applyTools($(this));
      });
      return this.editor = true;
    },
    shrink: function($except) {
      if ($except == null) {
        $except = null;
      }
      if (this.editor === false) {
        return;
      }
      this.log('shrink() is executed');
      $except = $($except);
      return $('.tagla-tag').each(function() {
        if ($except[0] === this) {
          return;
        }
        $(this).removeClass('tagla-tag-active tagla-tag-choose');
        return $(this).data('draggabilly').disable();
      });
    },
    unedit: function() {
      if (this.edit === false) {
        return;
      }
      this.log('unedit() is executed');
      $('.tagla-tag').each(function() {
        return this._removeTools($(this));
      });
      this.wrapper.removeClass('tagla-editing');
      return this.editor = false;
    },
    init: function(options) {
      var _ref;
      this.data = options.data || [];
      this.editor = (_ref = options.editor === true) != null ? _ref : {
        on: false
      };
      this.form = options.form ? $(options.form) : Tagla.FORM_TEMPLATE;
      this.tagTemplate = options.tagTemplate ? $(options.tagTemplate).html() : Tagla.TAG_TEMPLATE;
      this.unit = options.unit === 'percent' ? 'percent' : 'pixel';
      this.imageSize = null;
      return this.image = this.wrapper.find('img');
    },
    bind: function() {
      this.log('bind() is executed');
      return this.wrapper.on('mouseenter', $.proxy(this.handleMouseEnter, this)).on('click', $.proxy(this.handleWrapperClick, this)).on('click', '.tagla-tag', $.proxy(this.handleTagClick, this)).on('click', '.tagla-tag-edit-link', $.proxy(this.handleTagEdit, this)).on('click', '.tagla-tag-delete-link', $.proxy(this.handleTagDelete, this));
    },
    renderFn: function(success, data) {
      var tag, _i, _len, _ref, _results;
      if (!success) {
        this.log("Failed to load image: " + (this.image.attr('src')), 'error');
        this.destroy();
        return;
      }
      this._updateImageSize(data);
      this.wrapper.addClass('tagla');
      if (this.editor) {
        this.wrapper.addClass('tagla-editing');
      }
      _ref = this.data;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        tag = _ref[_i];
        _results.push(this.addTag(tag));
      }
      return _results;
    },
    render: function() {
      this.log('render() is executed');
      this.imageSize = Stackla.getImageSize(this.image, $.proxy(this.renderFn, this));
      return this.imageSize.on('change', $.proxy(this.handleImageResize, this));
    },
    destroy: function() {
      return this.log('destroy() is executed');
    }
  };

  $.extend(Tagla.prototype, proto);

  if (!window.Stackla) {
    window.Stackla = {};
  }

  window.Stackla.Tagla = Tagla;

}).call(this);

//# sourceMappingURL=data:application/json;base64,