{"version":3,"sources":["/source/image.coffee","../src/js/node_modules/browserify/node_modules/browser-pack/_prelude.js","../src/js/node_modules/mustache/mustache.js","/Users/josephj/Repos/tagla2/src/coffee/base.coffee","/Users/josephj/Repos/tagla2/src/coffee/tagla.coffee"],"names":[],"mappings":"AAAA;AAAA;IAAA;+BAAA;;AAAA,EAAM;AAEJ;;AAAa,uBAAC,EAAD,EAAK,QAAL;AACX;AAAA,MACA,IAAC,KAAD,CAAM,EAAN,CADA;AAAA,MAEA,IAAC,KAAD,EAFA;AAAA,MAGA,IAAC,OAAD,CAAQ,QAAR,CAHA;AAIA,aAAO,IAAP,CALW;IAAA,CAAb;;AAAA,wBAOA,WAAU;aAAM,YAAN;IAAA,CAPV;;AAAA,wBASA,OAAM,SAAC,EAAD;AACJ,UAAC,GAAD,GAAM,EAAE,EAAF,CAAM,GAAZ;AAAA,MACA,IAAC,SAAD,GAAY,IAAC,GAAE,CAAC,QADhB;AAAA,MAEA,IAAC,KAAD,GAAQ,EAFR;AAAA,MAGA,IAAC,OAAD,GAAU,IAHV;AAAA,MAIA,IAAC,KAAI,CAAC,KAAN,GAAc,IAAC,GAAE,CAAC,KAJlB;aAKA,IAAC,KAAI,CAAC,MAAN,GAAe,IAAC,GAAE,CAAC,OANf;IAAA,CATN;;AAAA,wBAiBA,OAAM;AACJ,UAAC,IAAD,CAAK,oBAAL;aAEA,EAAE,MAAF,CAAS,CAAC,MAAV,CAAiB;eAAA,SAAC,CAAD;AACf;AAAA,oBAAU,KAAC,GAAE,CAAC,KAAJ,KAAa,KAAC,KAAI,CAAC,KAAnB,IAA6B,KAAC,GAAE,CAAC,MAAJ,KAAc,KAAC,KAAI,CAAC,MAA3D;AACA,cAAU,OAAV;AAAA;WADA;AAAA,UAEA,CAAC,CAAC,MAAF,CAAS,KAAC,KAAV,EAAgB;AAAA,YACd,OAAO,KAAC,GAAE,CAAC,KADG;AAAA,YAEd,QAAQ,KAAC,GAAE,CAAC,MAFE;AAAA,YAGd,YAAY,KAAC,GAAE,CAAC,KAAJ,GAAY,KAAC,KAAI,CAAC,YAHhB;AAAA,YAId,aAAa,KAAC,GAAE,CAAC,MAAJ,GAAa,KAAC,KAAI,CAAC,aAJlB;WAAhB,CAFA;AAAA,UAQA,KAAC,IAAD,CAAK,4BAAL,CARA;iBASA,KAAC,CAAC,IAAF,CAAO,QAAP,EAAiB,CAAC,KAAC,KAAF,CAAjB,EAVe;QAAA;MAAA,QAAjB,EAHI;IAAA,CAjBN;;AAAA,wBAgCA,SAAQ,SAAC,QAAD;AACN;AAAA,UAAC,IAAD,CAAK,sBAAL;AAEA,UAAG,IAAC,SAAJ;AACE,cAAU,WAAV;AAAA,QACA,GAAG,CAAC,GAAJ,GAAU,IAAC,GAAE,CAAC,GADd;AAAA,QAEA,IAAC,IAAD,CAAK,YAAU,IAAC,GAAE,CAAC,GAAd,GAAkB,aAAvB,CAFA;AAAA,QAGA,IAAC,KAAI,CAAC,YAAN,GAAqB,GAAG,CAAC,KAHzB;AAAA,QAIA,IAAC,KAAI,CAAC,aAAN,GAAsB,GAAG,CAAC,MAJ1B;eAKA,SAAS,IAAT,EAAe,IAAC,KAAhB,EANF;OAAA;AASE,YAAC,IAAD,CAAK,YAAU,IAAC,GAAE,CAAC,GAAd,GAAkB,gBAAvB;AAAA,QACA,MAAU,WADV;AAAA,QAEA,GAAG,CAAC,GAAJ,GAAU,IAAC,GAAE,CAAC,GAFd;AAAA,QAGA,GAAG,CAAC,MAAJ,GAAa;iBAAA,SAAC,CAAD;AACX,iBAAC,IAAD,CAAK,YAAU,GAAG,CAAC,GAAd,GAAkB,aAAvB;AAAA,YACA,KAAC,KAAI,CAAC,YAAN,GAAqB,GAAG,CAAC,KADzB;AAAA,YAEA,KAAC,KAAI,CAAC,aAAN,GAAsB,GAAG,CAAC,MAF1B;mBAGA,SAAS,IAAT,EAAe,KAAC,KAAhB,EAJW;UAAA;QAAA,QAHb;eAQA,GAAG,CAAC,OAAJ,GAAc;iBAAA,SAAC,CAAD;AACZ,iBAAC,IAAD,CAAK,YAAU,GAAG,CAAC,GAAd,GAAkB,qBAAvB;mBACA,SAAS,KAAT,EAAgB,KAAC,KAAjB,EAFY;UAAA;QAAA,SAjBhB;OAHM;IAAA,CAhCR;;qBAAA;;KAFsB,OAAO,CAAC,KAAhC;;AA2DA,aAAiC,CAAC,OAAlC;AAAA,UAAM,CAAC,OAAP,GAAiB,EAAjB;GA3DA;;AAAA,EA6DA,OAAO,CAAC,YAAR,GAAuB,SAAC,EAAD,EAAK,QAAL;WACjB,cAAU,EAAV,EAAc,QAAd,EADiB;EAAA,CA7DvzkBA;AAAA;;EAAA;AAAA;;AAAA;AAKe;AACX;;MADY,UAAU;KACtB;AAAA,YAAQ,IAAC,GAAT;AAAA,IACA,CADA;AAEA,QAAG,KAAH;AACE,UAAC,MAAD,GAAU,KADZ;KAAA,MAEK,IAAG,CAAH;AACH,UAAC,MAAD,GAAU,KAAK,CAAC,KAAN,KAAe,IAAzB,CADG;KAAA;AAGH,UAAC,MAAD,GAAS,KAAT,CAHG;KAJL;AAAA,IAQA,IAAC,WAAD,GAAc,EARd,CADW;EAAA,CAAb;;AAAA,GAWU;AAAA;EAAA,CAXV;;AAAA,IAaK;AACH;AAAA;KAAA;AAAA,IACA,OAAO,EADP;AAEA;AACE,YAAM,CAAC,OAAQ,MADjB;KAHG;EAAA,CAbL;;AAAA,IAoBI;AACF;AACE,YAAU,UAAM,0BADlB;KAAA;AAAA,IAEA,IAAC,IAAD,CAAK,oBAAoB,IAApB,GAA2B,kBAAhC,CAFA;AAGA;AAAA,UAAC,WAAW,MAAZ,GAAoB,EAApB;KAHA;AAAA,IAIA,QAAQ,CAAC,QAAT,GAAoB,IAJpB;AAAA,IAKA,CALA;WAMA,SAPE;EAAA,CApBJ;;AAAA,IA6BM;AACJ;;MADW,IAAO;KAClB;AAAA,QAAC,IAAD,CAAK,GAAL;AAAA,IACA,CACE;AAAA,YAAM,IAAN;AAAA,MACA,QAAQ,IADR;KADF,CADA;AAIA;AAAA;KAJA;AAKA,QAAG,IAAC,WAAW,MAAZ,IAAsB,IAAC,WAAW,CAArC;AACE;AACE,YAAC,WAAW,MAAM,GAAE,CAAC,KAArB,CAA2B,IAA3B,EAA8B,IAA9B,EADF;AAAA,OADF;KALA;OADI;EAAA,CA7BN;;AAAA,IAwCW;AACT;AAAA,WAAO,IAAC,OAAD,EAAP;AAAA,IACA,SAAS,EADT;AAAA,IAEA,MAAM,IAAI,CAAC,OAAL,CAAa,EAFnB;AAAA,IAGA,IAAC,IAAD,CAAK,GAHL;AAIA,QAAG,IAAI,CAAC,OAAL,CAAa,GAAb,IAAH;AACE,eAAS,IAAI,CAAC,KAAL,CAAW,MAAM,CAAjB,EAAoB,IAAI,CADnC;KAAA;AAGE,eAAS,IAAI,CAAC,KAAL,CAAW,MAAM,CAAjB,CAAmB,CAAC,KAApB,CAA0B,GAA1B,CAAT,CAHF;KAJA;AAQA;AACE;AAAA,MACA,MAAO,KAAK,GAAL,CAAP,EAFF;AAAA,KARA;AAWA,QAAG,GAAH;KAAA;KAAA;aAA6B,OAA7B;KAZS;EAAA,CAxCX;;AAAA,IAsDQ;AAAA;EAAA,CAtDR;;IAAA;;IALF;;AA8DA;AAAA;CA9DA;;AAAA;;AAAA,MAiEM,CAAC,OAAP,GAAiB,IAjEjB;;;;;ACAA;EAAA;6BAAA;;AAAA,WAAW,QAAQ,UAAR,CAAX;;AAAA,IACA,GAAO,QAAQ,eAAR,CADP;;AAAA,KAGA,GACE;AAAA;AAAA,EACA,OADA;AAAA,EAEA,WACE;AAAA,iBAAa,EAAb;AAAA,IACA,QAAQ,EADR;GAHF;AAAA,EAKA,aACE;AAAA;AAAA,IACA,YADA;AAAA,IAEA,OAAO,OAFP;GANF;AAAA,EASA,eAAe,CATf;AAAA,EA2BA,EA3BA;AAAA,EAiEA,kBAAkB,CAChB,yBADgB,EAEhB,2CAFgB,EAGhB,QAHgB,CAIjB,CAAC,IAJgB,CAIX,IAJW,CAjElB;CAJF;;AAAA;AA4EE;;AAAa,iBAAC,QAAD,EAAW,CAAX;;MAAW,UAAU;KAChC;AAAA;AAAA,IACA,CADA;AAAA,IAEA,IAAC,KAAD,CAAM,OAAN,CAFA;AAAA,IAGA,IAAC,KAAD,EAHA,CADW;EAAA,CAAb;;GAAA;;GADkB,KA3EpB;;AAAA,CAkFC,CAAC,MAAF,CAlFA;;AAAA,KAoFA,GAIE;AAAU;SAAA;EAAA,CAAV;AAAA,EAMA,aAAa;AACX;AAAA,QAAC,IAAD,CAAK,kBAAL;AAAA,IACA,OAAW,gBAAY,IAAK,GAD5B;AAAA,IAEA,IAAI,CAAC,EAAL,CAAQ,SAAR,EAAmB,CAAC,CAAC,KAAF,CAAQ,IAAC,OAF5B;AAAA,IAGA,IAAI,CAAC,IAAL,CAAU,aAAV,EAAyB,IAAzB,CAHA;AAAA,IAKA,MAAM,IAAI,CAAC,IAAL,CAAU,UAAV,CALN;AAAA,IAMA,QAAQ,IAAI,CAAC,IAAL,CAAU,aANlB;AAAA,IAOA,KAAK,CAAC,IAAN,CAAW,UAAX,CAAsB,CAAC,GAAvB,CAA2B,CAP3B;AAAA,IAQA,KAAK,CAAC,IAAN,CAAW,UAAX,CAAsB,CAAC,GAAvB,CAA2B,GAAG,CAAC,CAA/B,CARA;AAAA,IASA,KAAK,CAAC,IAAN,CAAW,uBATX;AAAA,IAUA,UAAU,IAAI,CAAC,IAAL,CAAU,cAVpB;AAAA,IAWA,OAAO,CAAC,OAAR,CAAgB,KAAK,CAAC,WAAtB,CAXA;AAAA,IAYA,OAAO,CAAC,EAAR,CAAW,QAAX,EAAqB,CAAC,CAAC,KAAF,CAAQ,IAAC,IAZ9B;WAaA,OAAO,CAAC,EAAR,CAAW,iBAA0B;aACnC,OAAO,CAAC,OAAR,CAAgB,aAAhB,EADmC;IAAA,CAArC,EAdW;EAAA,CANb;AAAA,EAuBA,KAAc;AACZ;AAAA;KAAA;AAAA,IACA,IAAC,IAAD,CADA;AAAA,IAEA,CAFA;WAGA,EAAE,YAAF,CAAe,CAAC,IAAhB,CAAqB;AACnB,UAAU,OAAQ,GAAR,KAAV;AAAA;OAAA;aACA,EAFmB;IAAA,CAArB,EAJY;EAAA,CAvBd;AAAA,EA+BA,KAAa;AACX;AAAA;KAAA;AAAA,IACA,IAAC,IAAD,CADA;AAAA,IAEA,CAFA;WAGA,EAAE,YAAF,CAAe,CAAC,IAAhB,CAAqB;AACnB,UAAU,OAAQ,GAAR,KAAV;AAAA;OAAA;aACA,EAFmB;IAAA,CAArB,EAJW;EAAA,CA/Bb;AAAA,EAuCA,KAAc;AACZ;AAAA,QAAI,CAAC,IAAL,CAAU,aAAV,CAAwB,CAAC,GAAzB;AAAA,IACA,UAAU,EADV;AAAA,IAEA,OAAO,CAAC,IAAR,EAAc,CAAC,WAAf,CAA2B,QAF3B;WAGA,OAAO,CAAC,IAAR,EAAc,CAAC,MAAf,GAJY;EAAA,CAvCd;AAAA,EA6CA,cAAc,SAAC,IAAD;AACZ;AAAA,QAAC,IAAD,CAAK,mBAAL;AAAA,IACA,MAAM,IAAI,CAAC,GADX;AAAA,IAEA,IAAI,CAAC,GAAG,CAAC,IAAJ,GAAW,CAAC,IAAI,CAAC,KAAL,KAAe,CAAhB,CAAZ,IAAkC,CAFtC;AAAA,IAGA,IAAI,CAAC,GAAG,CAAC,GAAJ,GAAU,CAAC,IAAI,CAAC,CAHrB;AAIA,QAAG,IAAC,KAAD,KAAS,SAAZ;AACE,UAAI,IAAI,IAAC,aAAL,GAAoB,GAAxB;AAAA,MACA,IAAI,IAAI,IAAC,cAAL,EAFN;KAJA;WAOA,CAAC,CAAD,EAAI,CAAJ,EARY;EAAA,CA7Cd;AAAA,EAuDA,gBAAkB;AAChB;AAAA,IACA,IAAC,aAAD,GAAgB,IAAI,CAAC,OADrB;AAAA,IAEA,IAAC,cAAD,GAAiB,IAAI,CAAC,aAFtB;AAAA,IAGA,IAAC,aAAD,GAAgB,IAAI,CAAC,KAHrB;AAAA,IAIA,IAAC,cAAD,GAAiB,IAAI,CAAC,MAJtB;AAAA,IAKA,IAAC,WAAD,GAAc,IAAI,CAAC,QALnB;WAMA,IAAC,YAAD,GAAe,IAAI,CAAC,EAPJ;EAAA,CAvDlB;AAAA,EAmEA,gBAAgB,SAAC,CAAD;AACd;AAAA,KAAC,CAAC,cAAF;AAAA,IACA,CAAC,CAAC,OADF;AAEA,UAAc,CAAE,CAAC,CAAC,MAAJ,CAAW,CAAC,EAA1B;AAAA;KAFA;AAAA,IAGA,IAAC,IAAD,CAHA;AAAA,IAIA,CAJA;AAAA,IAKA,IAAC,OAAD,CAAQ,IAAR,CALA;AAAA,IAMA,IAAI,CAAC,QAAL,CAAc,YANd;WAOA,IAAI,CAAC,IAAL,CAAU,CARI;EAAA,CAnEhB;AAAA,EA6EA,iBAAiB,SAAC,CAAD,EAAI,MAAJ;AACf;AAAA,QAAC,IAAD,CAAK,2BAAL;AAAA,IACA,UAAU,EAAE,CAAC,CAAC,MAAJ,CADV;AAAA,IAEA,OAAO,OAAO,CAAC,OAAR,CAAgB,YAAhB,CAFP;AAAA,IAGA,QAAQ,IAAI,CAAC,QAAL,CAHR;AAAA,IAIA,IAAI,CAAC,WAAL,CAAiB,oBAJjB;AAAA,IAKA,OAAO,CAAC,CAAC,MAAF,CAAS,EAAT,EAAa,IAAI,CAAC,IAAL,CAAU,SAL9B;AAAA,IAMA,IAAI,CAAC,KAAL,GAAa,OAAO,CAAC,IAAR,CAAa,iBAAb,CAA+B,CAAC,IAAhC,EANb;AAAA,IAOA,IAAI,CAAC,KAAL,GAAa,OAAO,CAAC,GAAR,MAAiB,IAAI,CAAC,KAPnC;AAAA,IAQA,YAAY,IAAI,CAAC,IAAL,CAAU,aAAV,CAAwB,CAAC,SAAzB,EARZ;AASA,QAAG,KAAH;aACE,IAAC,KAAD,CAAM,KAAN,EAAa,CAAC,IAAD,EAAO,SAAP,EAAkB,IAAlB,CADf;KAAA;aAGE,IAAC,KAAD,CAAM,QAAN,EAAgB,CAAC,IAAD,EAAO,SAAP,EAAkB,IAHpC;KAVe;EAAA,CA7EjB;AAAA,EA4FA,GAAiB;AACf;AAAA,QAAC,IAAD,CAAK,mBAAL;AAAA,IACA,CAAC,CAAC,aADF;AAAA,IAEA,OAAO,EAAE,CAAC,CAAC,aAAJ,CAAkB,CAAC,OAAnB,CAA2B,QAFlC;AAAA,IAGA,OAAO,CAAC,CAAC,MAAF,CAAS,EAAT,CAHP;WAIA,IAAI,CAAC,OAAL,CAAa;aAAA;AACX,aAAC,aAAD,CAAc,IAAd;AAAA,QACA,IAAI,CAAC,MAAL,EADA;eAEA,KAAC,KAAD,CAAM,OAHK;MAAA;IAAA,QAAb,EALe;EAAA,CA5FjB;AAAA,EAsGA,YAAe;AACb;AAAA,QAAC,IAAD,CAAK,iBAAL;AAAA,IACA,CAAC,CAAC,aADF;AAAA,IAEA,CAAC,CAAC,eAAF,EAFA;AAAA,IAGA,OAAO,EAAE,CAAC,CAAC,QAHX;AAAA,IAIA,IAAI,CAAC,QAAL,CAAc,MAJd;AAAA,IAKA,IAAC,QAAO,CAAC,QAAT,CAAkB,yBAAlB,CALA;AAAA,IAMA,IAAC,aAAD,CAAc,IAAd,CANA;AAAA,IAOA,IAAI,CAAC,IAAL,CAAU,eAAV,CAA0B,CAAC,OAA3B,CAAmC,aAAnC,CAPA;AAAA,IAQA,OAAO,CAAC,CAAC,MAAF,CAAS,EAAT,EAAa,IARpB;WASA,IAAC,KAAD,CAAM,MAAN,EAAc,CAAC,IAAD,EAAO,IAAP,CAAd,EAVa;EAAA,CAtGf;AAAA,EAkHA,eAAe,SAAC,QAAD,EAAW,KAAX;AACb;AAAA,QAAC,IAAD,CAAK,6BAAL;AAAA,IAEA,OAAO,EAAE,QAAQ,CAAC,OAAX,CAFP;AAAA,IAGA,OAAO,IAAI,CAAC,IAAL,CAAU,UAAV,CAHP;AAAA,IAIA,MAAM,IAAC,aAAD,CAAc,GAJpB;AAAA,IAKA,IAAI,CAAC,CAAL,GAAS,GAAI,GALb;AAAA,IAMA,IAAI,CAAC,CAAL,GAAS,GAAI,GANb;AAAA,IAQA,QAAQ,IAAI,CAAC,GARb;AAAA,IASA,KAAK,CAAC,IAAN,CAAW,KATX;AAAA,IAUA,KAAK,CAAC,IAAN,CAAW,UAAX,CAAsB,CAAC,GAAvB,CAA2B,IAAI,CAAC,CAVhC;AAAA,IAWA,YAAY,IAAI,CAAC,IAAL,CAAU,aAXtB;AAAA,IAaA,IAAC,aAAD,GAAoB,UAbpB;AAAA,IAcA,OAAO,CAAC,CAAC,MAAF,CAAS,EAAT,EAAa,IAAb,CAdP;AAAA,IAeA,QAAW,IAAI,CAAC,EAAR,GAAgB,KAAhB,GAAwB,IAfhC;WAgBA,IAAC,KAAD,CAAM,MAAN,EAAc,CAjBD;EAAA,CAlHf;AAAA,EAqIA,qBAAqB,SAAC,CAAD;AACnB;AAAA,QAAC,IAAD,CAAK,qBAAL;AAAA,IACA,OAAO,EAAE,CAAC,CAAC,KADX;AAAA,IAIA,QAAS,IAAI,CAAC,IAAL,CAAU,OAAV,CAJT;AAKA,QAAuB,KAAvB;AAAA,mBAAa,KAAb;KALA;AAAA,IAMA,IAAI,CAAC,UAAL,CAAgB,MANhB;AAAA,IAQA,CARA;WASA,IAAC,KAAD,CAAM,OAAN,CAVmB;EAAA,CArIrB;AAAA,EAiJA,qBAAqB,SAAC,CAAD;AACnB;AAAA,QAAC,IAAD,CAAK,qBAAL;AAAA,IACA,OAAO,EAAE,CAAC,CAAC,KADX;AAAA,IAIA,QAAQ,IAAI,CAAC,IAAL,CAAU,OAAV,CAJR;AAKA,QAAuB,KAAvB;AAAA,mBAAa,KAAb;KALA;AAAA,IAMA,IAAI,CAAC,UAAL,CAAgB,MANhB;AAAA,IASA,CAAmB;aACjB,IAAI,CAAC,WADY;IAAA,CAAX,EAEN,GAFM,CATR;WAYA,IAAI,CAAC,IAAL,CAAU,OAAV,EAAmB,KAAnB,EAbmB;EAAA,CAjJrB;AAAA,EAgKA,oBAAoB,SAAC,CAAD;AAClB;AAEA,QAAkB,UAAJ,GAAa,IAAC,UAA5B;aAAA,IAAC,OAAD;KAHkB;EAAA,CAhKpB;AAAA,EAqKA,GAAmB;AACjB;AAAA,QAAC,IAAD,CAAK,2BAAL;AAAA,IACA,YAAY,IAAC,UADb;AAAA,IAEA,aAAa,IAAC,cAFd;AAAA,IAGA,EAAE,YAAF,CAAe,CAAC,IAAhB,CAAqB;AACnB;AAAA,aAAO,EAAE,IAAF,CAAP;AAAA,MACA,MAAM,IAAI,CAAC,QAAL,CADN;AAAA,MAEA,IAAI,CAAC,GAAG,CAAC,IAAJ,EAFL;AAAA,MAGA,IAAI,CAAC,GAAG,CAAC,GAAJ,GAAU,OAHf;aAIA,IAAI,CAAC,GAAL,CACE;AAAA,cAAS,CAAD,GAAG,IAAX;AAAA,QACA,KAAQ,CAAD,GAAG,IADV;OADF,EALmB;IAAA,CAArB,CAHA;SADiB;EAAA,CArKnB;AAAA,EAsLA,QAAQ,SAAC,GAAD;AACN;;MADO,MAAM;KACb;AAAA,QAAC,IAAD,CAAK,EAAL;AAAA,IAEA,CAFA;AAAA,IAGA,GAAG,CAAC,SAAJ,GAAgB,IAAC,SAHjB;AAAA,IAIA,OAAO,EAAE,QAAQ,CAAC,MAJlB;AAAA,IAKA,QAAS,IAAI,CAAC,CAAL,IAAW,IAAI,CAAC,CALzB;AAQA,QAAG,KAAH;AACE,QAAE,YAAF,CAAe,CAAC,IAAhB,CAAqB;AACnB,YAAG,EAAE,EAAL;iBACE,EAAE,IAAF,CAAI,CAAC,OAAL,CAAa;mBAAA;qBACX,KAAC,aAAD,CAAc,IAAd,EADW;YAAA;UAAA,QAAb,EADF;SADmB;MAAA,CAArB,EADF;KARA;AAAA,IAcA,IAAC,CAdD;AAeA;AAEE,SAAG,CAAC,CAAJ,GAAQ,EAAR;AAAA,MACA,GAAG,CAAC,CAAJ,GAAQ,EADR;AAAA,MAEA,IAAI,CAAC,MAJP;KAfA;AAoBA,QAAG,IAAC,KAAD,KAAS,SAAZ;AACE;AAAA,MACA,IAAI,IAAC,cAAD,GAAiB,CAAC,EAFxB;KAAA;AAIE,UAAI,GAAG,CAAC,CAAJ,GAAQ,IAAC,WAAb;AAAA,MACA,IAAI,EALN;KApBA;AAAA,IA0BA,UAAU,IAAI,CAAC,UAAL,KAAoB,CA1B9B;AAAA,IA2BA,CA3BA;AAAA,IA4BA,IAAI,CAAC,GAAL,CACE;AAAA,cAAU,CAAC,IAAI,OAAL,IAAa,IAAvB;AAAA,MACA,OAAS,CADT;KADF,CA5BA;AAAA,IAgCA,IAAI,CAAC,IAAL,CAAU,UAAV,EAAsB,GAAtB,CAhCA;AAkCA;AACE,UAAC,YAAD,CAAa,IAAb;AACA,UAAG,KAAH;AACE,YAAI,CAAC,IAAL,CAAU,WAAV;AAAA,QACA,IAAI,CAAC,KADL;eAEA,WAAW;iBAAA;AACT,iBAAC,QAAO,CAAC,QAAT,CAAkB,SAAlB;AAAA,YACA,IAAI,CAAC,IAAL,CAAU,OADV;AAAA,YAEA,KAAC,aAAD,CAAc,IAAd,CAFA;mBAGA,KAAC,KAAD,CAAM,KAAN,EAAa,CAAC,IAAD,CAAb,EAJS;UAAA;QAAA,QAAX,EAKE,GALF,EAHF;OAFF;KAnCM;EAAA,CAtLR;AAAA,EAqOA,GAAW;IAAA;EAAA,CArOX;AAAA,EAwOA,MAAM;AACJ;AAAA;KAAA;AAAA,IACA,IAAC,IAAD,CADA;AAAA,IAEA,CAFA;AAAA,IAGA,EAAE,YAAF,CAAe,CAAC,IAAhB,CAAqB;aAAG,IAAC,YAAD,CAAa,EAAE,IAAF,CAAb,EAAH;IAAA,CAArB,CAHA;WAIA,IAAC,OAAD,GAAU,KALN;EAAA,CAxON;AAAA,EA+OA,SAAS;AACP;AAAA,QAAC,IAAD,CAAK,UAAL;AAAA,IACA,OAAO,EADP;AAAA,IAEA,EAAE,YAAF,CAAe,CAAC,IAAhB,CAAqB;AACnB;AAAA,aAAO,CAAC,CAAC,MAAF,CAAS,EAAT,EAAa,EAAE,IAAF,CAAI,CAAC,GAAzB;aACA,EAFmB;IAAA,CAArB,CAFA;WAKA,KANO;EAAA,CA/OT;AAAA,EAwPA,QAAQ;;MAAC,UAAU;KACjB;AAAA,QAAU,IAAC,OAAD,EAAV;AAAA;KAAA;AAAA,IACA,IAAC,IAAD,CADA;AAAA,IAEA,CAFA;AAAA,IAGA,EAAE,YAAF,CAAe,CAAC,IAAhB,CAAqB;aAAA,SAAC,CAAD;AACnB;AAAA,YAAU,OAAQ,GAAR,KAAc,EAAxB;AAAA;SAAA;AAAA,QACA,OAAO,EADP;AAEA;AACE,cAAI,CAAC,MAAQ;AACX,gBAAI,CAAC,MAAL;mBACA,KAAC,WAFU;UAAA,CAAb,EADF;SAFA;aADmB;MAAA;IAAA,QAArB,CAHA;AAAA,IAWA,IAXA;WAYA,GAbM;EAAA,CAxPR;AAAA,EAuQA,cAAc,SAAC,IAAD;AACZ;AAAA,WAAO,CAAC,CAAC,MAAF,CAAS,EAAT,EAAa,IAAI,CAAC,IAAL,CAAU,IAA9B;AAAA,IACA,IAAI,CAAC,IADL;AAAA,IAEA,OAAO,EAAE,QAAQ,CAAC,MAAT,CAAgB,IAAC,YAAjB,EAA8B,IAA9B,CAAF,CAFP;AAAA,IAGA,IAAI,CAAC,IAAL,CAAU,eAAV,CAA0B,CAAC,IAH3B;WAIA,IAAI,CAAC,IAAL,CAAU,UAAV,EAAsB,IAAtB,EALY;EAAA,CAvQd;AAAA,EA8QA,QAAQ;AACN;AAAA;KAAA;AAAA,IACA,IAAC,IAAD,CADA;AAAA,IAEA,CAAqB;aAAA,SAAC,CAAD,EAAI,EAAJ;eACnB,KAAC,aAAD,CAAc,EAAE,EAAF,CAAd,EADmB;MAAA;IAAA,QAArB,CAFA;AAAA,IAIA,IAJA;WAKA,GANM;EAAA,CA9QR;AAAA,EAyRA,MAAM,SAAC,OAAD;AAEJ;AAAA,QAAC,KAAD,GAAQ,OAAO,CAAC,GAAhB;AAAA,IACA,IAAC,IAAkC;AAAA,UAAK,KAAL;KADnC;AAAA,IAEA,IAAC,OAFD;AAAA,IAGA,EAHA;AAAA,IAIA,IAAC,YAAD,GAAkB,OAAO,CAAC,WAAX,GAA4B,EAAE,OAAO,CAAC,WAAV,CAAsB,CAAC,IAAvB,EAA5B,EAJf;AAAA,IAKA,IAAC,KAAD,GAAW,OAAO,CAAC,IAAR,KAAgB,QAL3B;AAAA,IAOA,IAAC,UAAD,GAAa,IAPb;AAAA,IAQA,IAAC,MAAD,GAAS,IAAC,QAAO,CAAC,IAAT,CAAc,KAAd,CART;WASA,IAAC,WAXG;EAAA,CAzRN;AAAA,EAsSA,MAAM;AACJ;WACA,IAAC,KAFG;EAAA,CAtSN;AAAA,EAgTA,QAAQ;AACN;AAAA,IACA,IAAC,MAAK,CAAC,IAAP,CAAY,EADZ;AAAA,IAEA,IAAC,UAAD,GAAa,OAAO,CAAC,QAFrB;WAGA,IAAC,UAAS,CAAC,EAAX,CAAc,QAAd,EAAwB,CAJlB;EAAA,CAhTR;AAAA,EAsTA,UAAU,SAAC,OAAD,EAAU,IAAV;AACR;AAAA,QAAC,IAAD,CAAK,wBAAL;AAAA,IACA,WAAW,QAAQ,CAAC,IAAT,CAAc,MADzB;AAGA;AACE,UAAC,IAAD,CAAK,2BAAwB,CAAC,IAAC,MAAK,CAAC,IAAP,CAAY,KAAZ,CAAD,CAA7B,EAAoD,OAApD;AAAA,MACA,IAAC,QAAD,CADA;AAEA,aAHF;KAHA;AAAA,IAOA,IAAC,KAPD;AAAA,IAQA,CARA;AASA,QAAoC,QAApC;AAAA,UAAC,QAAO,CAAC,QAAT,CAAkB,OAAlB;KATA;AAUA;AAAA;mBAAA;AAAA,UAAC,OAAD,CAAQ,GAAR;AAAA,KAVA;WAWA,WAAW;KAAA;AACT,YAAqC,KAAC,OAAtC;AAAA,eAAC,QAAO,CAAC,CAAT;SAAA;eACA,KAAC,KAAD,CAAM,OAAN,EAAe,CAAC,KAAD,CAAf,EAFS;MAAA;IAAA,QAAX,EAGE,GAHF,EAZQ;EAAA,CAtTV;AAAA,EAuUA,SAAS;AACP;AAAA,IACA,IAAC,QAAO,CAAC,MADT;WAEA,IAAC,QAAO,CAAC,IAAT,CAAc,SAAmB;AAC/B;AAAA,aAAO,EAAE,IAAF,CAAP;AAAA,MACA,IAAI,CAAC,IADL;AAAA,MAEA,IAAI,CAAC,IAAL,CAAU,KAFV;aAGA,IAAI,CAAC,MAAL,GAJ+B;IAAA,CAAjC,EAHO;EAAA,CAvUT;CAxFF;;AAAA,CAwaC,CAxaD;;AAyaA,WAAiC,CAAC,OAAlC;AAAA;CAzaA;;AAAA","file":"tagla.debug.js","sourcesContent":["class ImageSize extends Stackla.Base\n\n  constructor: (el, callback) ->\n    super()\n    @init(el)\n    @bind()\n    @render(callback)\n    return @\n\n  toString: () -> 'ImageSize'\n\n  init: (el) ->\n    @el = $(el)[0]\n    @complete = @el.complete\n    @data = {}\n    @_timer = null\n    @data.width = @el.width\n    @data.height = @el.height\n\n  bind: ->\n    @log 'bind() is executed'\n    # Keep an eye on resize event\n    $(window).resize (e) =>\n      isEqual = @el.width is @data.width and @el.height is @data.height\n      return if isEqual\n      $.extend @data, {\n        width: @el.width\n        height: @el.height\n        widthRatio: @el.width / @data.naturalWidth\n        heightRatio: @el.height / @data.naturalHeight\n      }\n      @log 'handleResize() is executed'\n      @.emit('change', [@data])\n\n  render: (callback) ->\n    @log 'render() is executed'\n    # Image Loaded\n    if @complete\n      img = new Image()\n      img.src = @el.src\n      @log \"Image '#{@el.src}' is loaded\"\n      @data.naturalWidth = img.width\n      @data.naturalHeight = img.height\n      callback(true, @data)\n    # Image Loading\n    else\n      @log \"Image '#{@el.src}' is NOT ready\"\n      img = new Image()\n      img.src = @el.src\n      img.onload = (e) =>\n        @log \"Image '#{img.src}' is loaded\"\n        @data.naturalWidth = img.width\n        @data.naturalHeight = img.height\n        callback(true, @data)\n      img.onerror = (e) =>\n        @log \"Image '#{img.src}' is failed to load\"\n        callback(false, @data)\n\n\nwindow.Stackla = {} unless window.Stackla\n\nStackla.getImageSize = (el, callback) ->\n  new ImageSize(el, callback)\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*!\n * mustache.js - Logic-less {{mustache}} templates with JavaScript\n * http://github.com/janl/mustache.js\n */\n\n/*global define: false*/\n\n(function (global, factory) {\n  if (typeof exports === \"object\" && exports) {\n    factory(exports); // CommonJS\n  } else if (typeof define === \"function\" && define.amd) {\n    define(['exports'], factory); // AMD\n  } else {\n    factory(global.Mustache = {}); // <script>\n  }\n}(this, function (mustache) {\n\n  var Object_toString = Object.prototype.toString;\n  var isArray = Array.isArray || function (object) {\n    return Object_toString.call(object) === '[object Array]';\n  };\n\n  function isFunction(object) {\n    return typeof object === 'function';\n  }\n\n  function escapeRegExp(string) {\n    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n  }\n\n  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n  // See https://github.com/janl/mustache.js/issues/189\n  var RegExp_test = RegExp.prototype.test;\n  function testRegExp(re, string) {\n    return RegExp_test.call(re, string);\n  }\n\n  var nonSpaceRe = /\\S/;\n  function isWhitespace(string) {\n    return !testRegExp(nonSpaceRe, string);\n  }\n\n  var entityMap = {\n    \"&\": \"&amp;\",\n    \"<\": \"&lt;\",\n    \">\": \"&gt;\",\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    \"/\": '&#x2F;'\n  };\n\n  function escapeHtml(string) {\n    return String(string).replace(/[&<>\"'\\/]/g, function (s) {\n      return entityMap[s];\n    });\n  }\n\n  var whiteRe = /\\s*/;\n  var spaceRe = /\\s+/;\n  var equalsRe = /\\s*=/;\n  var curlyRe = /\\s*\\}/;\n  var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n  /**\n   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n   * argument is given here it must be an array with two string values: the\n   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n   * course, the default is to use mustaches (i.e. mustache.tags).\n   *\n   * A token is an array with at least 4 elements. The first element is the\n   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n   * all text that appears outside a symbol this element is \"text\".\n   *\n   * The second element of a token is its \"value\". For mustache tags this is\n   * whatever else was inside the tag besides the opening symbol. For text tokens\n   * this is the text itself.\n   *\n   * The third and fourth elements of the token are the start and end indices,\n   * respectively, of the token in the original template.\n   *\n   * Tokens that are the root node of a subtree contain two more elements: 1) an\n   * array of tokens in the subtree and 2) the index in the original template at\n   * which the closing tag for that section begins.\n   */\n  function parseTemplate(template, tags) {\n    if (!template)\n      return [];\n\n    var sections = [];     // Stack to hold section tokens\n    var tokens = [];       // Buffer to hold the tokens\n    var spaces = [];       // Indices of whitespace tokens on the current line\n    var hasTag = false;    // Is there a {{tag}} on the current line?\n    var nonSpace = false;  // Is there a non-space char on the current line?\n\n    // Strips all whitespace tokens array for the current line\n    // if there was a {{#tag}} on it and otherwise only space.\n    function stripSpace() {\n      if (hasTag && !nonSpace) {\n        while (spaces.length)\n          delete tokens[spaces.pop()];\n      } else {\n        spaces = [];\n      }\n\n      hasTag = false;\n      nonSpace = false;\n    }\n\n    var openingTagRe, closingTagRe, closingCurlyRe;\n    function compileTags(tags) {\n      if (typeof tags === 'string')\n        tags = tags.split(spaceRe, 2);\n\n      if (!isArray(tags) || tags.length !== 2)\n        throw new Error('Invalid tags: ' + tags);\n\n      openingTagRe = new RegExp(escapeRegExp(tags[0]) + '\\\\s*');\n      closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tags[1]));\n      closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tags[1]));\n    }\n\n    compileTags(tags || mustache.tags);\n\n    var scanner = new Scanner(template);\n\n    var start, type, value, chr, token, openSection;\n    while (!scanner.eos()) {\n      start = scanner.pos;\n\n      // Match any text between tags.\n      value = scanner.scanUntil(openingTagRe);\n\n      if (value) {\n        for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n          chr = value.charAt(i);\n\n          if (isWhitespace(chr)) {\n            spaces.push(tokens.length);\n          } else {\n            nonSpace = true;\n          }\n\n          tokens.push([ 'text', chr, start, start + 1 ]);\n          start += 1;\n\n          // Check for whitespace on the current line.\n          if (chr === '\\n')\n            stripSpace();\n        }\n      }\n\n      // Match the opening tag.\n      if (!scanner.scan(openingTagRe))\n        break;\n\n      hasTag = true;\n\n      // Get the tag type.\n      type = scanner.scan(tagRe) || 'name';\n      scanner.scan(whiteRe);\n\n      // Get the tag value.\n      if (type === '=') {\n        value = scanner.scanUntil(equalsRe);\n        scanner.scan(equalsRe);\n        scanner.scanUntil(closingTagRe);\n      } else if (type === '{') {\n        value = scanner.scanUntil(closingCurlyRe);\n        scanner.scan(curlyRe);\n        scanner.scanUntil(closingTagRe);\n        type = '&';\n      } else {\n        value = scanner.scanUntil(closingTagRe);\n      }\n\n      // Match the closing tag.\n      if (!scanner.scan(closingTagRe))\n        throw new Error('Unclosed tag at ' + scanner.pos);\n\n      token = [ type, value, start, scanner.pos ];\n      tokens.push(token);\n\n      if (type === '#' || type === '^') {\n        sections.push(token);\n      } else if (type === '/') {\n        // Check section nesting.\n        openSection = sections.pop();\n\n        if (!openSection)\n          throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n        if (openSection[1] !== value)\n          throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n      } else if (type === 'name' || type === '{' || type === '&') {\n        nonSpace = true;\n      } else if (type === '=') {\n        // Set the tags for the next time around.\n        compileTags(value);\n      }\n    }\n\n    // Make sure there are no open sections when we're done.\n    openSection = sections.pop();\n\n    if (openSection)\n      throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n    return nestTokens(squashTokens(tokens));\n  }\n\n  /**\n   * Combines the values of consecutive text tokens in the given `tokens` array\n   * to a single token.\n   */\n  function squashTokens(tokens) {\n    var squashedTokens = [];\n\n    var token, lastToken;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      if (token) {\n        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n          lastToken[1] += token[1];\n          lastToken[3] = token[3];\n        } else {\n          squashedTokens.push(token);\n          lastToken = token;\n        }\n      }\n    }\n\n    return squashedTokens;\n  }\n\n  /**\n   * Forms the given array of `tokens` into a nested tree structure where\n   * tokens that represent a section have two additional items: 1) an array of\n   * all tokens that appear in that section and 2) the index in the original\n   * template that represents the end of that section.\n   */\n  function nestTokens(tokens) {\n    var nestedTokens = [];\n    var collector = nestedTokens;\n    var sections = [];\n\n    var token, section;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      switch (token[0]) {\n      case '#':\n      case '^':\n        collector.push(token);\n        sections.push(token);\n        collector = token[4] = [];\n        break;\n      case '/':\n        section = sections.pop();\n        section[5] = token[2];\n        collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n        break;\n      default:\n        collector.push(token);\n      }\n    }\n\n    return nestedTokens;\n  }\n\n  /**\n   * A simple string scanner that is used by the template parser to find\n   * tokens in template strings.\n   */\n  function Scanner(string) {\n    this.string = string;\n    this.tail = string;\n    this.pos = 0;\n  }\n\n  /**\n   * Returns `true` if the tail is empty (end of string).\n   */\n  Scanner.prototype.eos = function () {\n    return this.tail === \"\";\n  };\n\n  /**\n   * Tries to match the given regular expression at the current position.\n   * Returns the matched text if it can match, the empty string otherwise.\n   */\n  Scanner.prototype.scan = function (re) {\n    var match = this.tail.match(re);\n\n    if (!match || match.index !== 0)\n      return '';\n\n    var string = match[0];\n\n    this.tail = this.tail.substring(string.length);\n    this.pos += string.length;\n\n    return string;\n  };\n\n  /**\n   * Skips all text until the given regular expression can be matched. Returns\n   * the skipped string, which is the entire tail if no match can be made.\n   */\n  Scanner.prototype.scanUntil = function (re) {\n    var index = this.tail.search(re), match;\n\n    switch (index) {\n    case -1:\n      match = this.tail;\n      this.tail = \"\";\n      break;\n    case 0:\n      match = \"\";\n      break;\n    default:\n      match = this.tail.substring(0, index);\n      this.tail = this.tail.substring(index);\n    }\n\n    this.pos += match.length;\n\n    return match;\n  };\n\n  /**\n   * Represents a rendering context by wrapping a view object and\n   * maintaining a reference to the parent context.\n   */\n  function Context(view, parentContext) {\n    this.view = view == null ? {} : view;\n    this.cache = { '.': this.view };\n    this.parent = parentContext;\n  }\n\n  /**\n   * Creates a new context using the given view with this context\n   * as the parent.\n   */\n  Context.prototype.push = function (view) {\n    return new Context(view, this);\n  };\n\n  /**\n   * Returns the value of the given name in this context, traversing\n   * up the context hierarchy if the value is absent in this context's view.\n   */\n  Context.prototype.lookup = function (name) {\n    var cache = this.cache;\n\n    var value;\n    if (name in cache) {\n      value = cache[name];\n    } else {\n      var context = this, names, index;\n\n      while (context) {\n        if (name.indexOf('.') > 0) {\n          value = context.view;\n          names = name.split('.');\n          index = 0;\n\n          while (value != null && index < names.length)\n            value = value[names[index++]];\n        } else if (typeof context.view == 'object') {\n          value = context.view[name];\n        }\n\n        if (value != null)\n          break;\n\n        context = context.parent;\n      }\n\n      cache[name] = value;\n    }\n\n    if (isFunction(value))\n      value = value.call(this.view);\n\n    return value;\n  };\n\n  /**\n   * A Writer knows how to take a stream of tokens and render them to a\n   * string, given a context. It also maintains a cache of templates to\n   * avoid the need to parse the same template twice.\n   */\n  function Writer() {\n    this.cache = {};\n  }\n\n  /**\n   * Clears all cached templates in this writer.\n   */\n  Writer.prototype.clearCache = function () {\n    this.cache = {};\n  };\n\n  /**\n   * Parses and caches the given `template` and returns the array of tokens\n   * that is generated from the parse.\n   */\n  Writer.prototype.parse = function (template, tags) {\n    var cache = this.cache;\n    var tokens = cache[template];\n\n    if (tokens == null)\n      tokens = cache[template] = parseTemplate(template, tags);\n\n    return tokens;\n  };\n\n  /**\n   * High-level method that is used to render the given `template` with\n   * the given `view`.\n   *\n   * The optional `partials` argument may be an object that contains the\n   * names and templates of partials that are used in the template. It may\n   * also be a function that is used to load partial templates on the fly\n   * that takes a single argument: the name of the partial.\n   */\n  Writer.prototype.render = function (template, view, partials) {\n    var tokens = this.parse(template);\n    var context = (view instanceof Context) ? view : new Context(view);\n    return this.renderTokens(tokens, context, partials, template);\n  };\n\n  /**\n   * Low-level method that renders the given array of `tokens` using\n   * the given `context` and `partials`.\n   *\n   * Note: The `originalTemplate` is only ever used to extract the portion\n   * of the original template that was contained in a higher-order section.\n   * If the template doesn't use higher-order sections, this argument may\n   * be omitted.\n   */\n  Writer.prototype.renderTokens = function (tokens, context, partials, originalTemplate) {\n    var buffer = '';\n\n    var token, symbol, value;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      value = undefined;\n      token = tokens[i];\n      symbol = token[0];\n\n      if (symbol === '#') value = this._renderSection(token, context, partials, originalTemplate);\n      else if (symbol === '^') value = this._renderInverted(token, context, partials, originalTemplate);\n      else if (symbol === '>') value = this._renderPartial(token, context, partials, originalTemplate);\n      else if (symbol === '&') value = this._unescapedValue(token, context);\n      else if (symbol === 'name') value = this._escapedValue(token, context);\n      else if (symbol === 'text') value = this._rawValue(token);\n\n      if (value !== undefined)\n        buffer += value;\n    }\n\n    return buffer;\n  };\n\n  Writer.prototype._renderSection = function (token, context, partials, originalTemplate) {\n    var self = this;\n    var buffer = '';\n    var value = context.lookup(token[1]);\n\n    // This function is used to render an arbitrary template\n    // in the current context by higher-order sections.\n    function subRender(template) {\n      return self.render(template, context, partials);\n    }\n\n    if (!value) return;\n\n    if (isArray(value)) {\n      for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n        buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n      }\n    } else if (typeof value === 'object' || typeof value === 'string') {\n      buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n    } else if (isFunction(value)) {\n      if (typeof originalTemplate !== 'string')\n        throw new Error('Cannot use higher-order sections without the original template');\n\n      // Extract the portion of the original template that the section contains.\n      value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n      if (value != null)\n        buffer += value;\n    } else {\n      buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n    }\n    return buffer;\n  };\n\n  Writer.prototype._renderInverted = function(token, context, partials, originalTemplate) {\n    var value = context.lookup(token[1]);\n\n    // Use JavaScript's definition of falsy. Include empty arrays.\n    // See https://github.com/janl/mustache.js/issues/186\n    if (!value || (isArray(value) && value.length === 0))\n      return this.renderTokens(token[4], context, partials, originalTemplate);\n  };\n\n  Writer.prototype._renderPartial = function(token, context, partials) {\n    if (!partials) return;\n\n    var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n    if (value != null)\n      return this.renderTokens(this.parse(value), context, partials, value);\n  };\n\n  Writer.prototype._unescapedValue = function(token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return value;\n  };\n\n  Writer.prototype._escapedValue = function(token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return mustache.escape(value);\n  };\n\n  Writer.prototype._rawValue = function(token) {\n    return token[1];\n  };\n\n  mustache.name = \"mustache.js\";\n  mustache.version = \"1.1.0\";\n  mustache.tags = [ \"{{\", \"}}\" ];\n\n  // All high-level mustache.* functions use this writer.\n  var defaultWriter = new Writer();\n\n  /**\n   * Clears all cached templates in the default writer.\n   */\n  mustache.clearCache = function () {\n    return defaultWriter.clearCache();\n  };\n\n  /**\n   * Parses and caches the given template in the default writer and returns the\n   * array of tokens it contains. Doing this ahead of time avoids the need to\n   * parse templates on the fly as they are rendered.\n   */\n  mustache.parse = function (template, tags) {\n    return defaultWriter.parse(template, tags);\n  };\n\n  /**\n   * Renders the `template` with the given `view` and `partials` using the\n   * default writer.\n   */\n  mustache.render = function (template, view, partials) {\n    return defaultWriter.render(template, view, partials);\n  };\n\n  // This is here for backwards compatibility with 0.4.x.\n  mustache.to_html = function (template, view, partials, send) {\n    var result = mustache.render(template, view, partials);\n\n    if (isFunction(send)) {\n      send(result);\n    } else {\n      return result;\n    }\n  };\n\n  // Export the escaping function so that the user may override it.\n  // See https://github.com/janl/mustache.js/issues/244\n  mustache.escape = escapeHtml;\n\n  // Export these mainly for testing, but also for advanced usage.\n  mustache.Scanner = Scanner;\n  mustache.Context = Context;\n  mustache.Writer = Writer;\n\n}));\n","###\n# @class Stackla.Base\n###\nclass Base\n\n  constructor: (options = {}) ->\n    debug = @getParams('debug')\n    attrs = attrs or {}\n    if debug\n      @debug = (debug is 'true' or debug is '1')\n    else if attrs.debug\n      @debug = (attrs.debug is on)\n    else\n      @debug = false\n    @_listeners = []\n\n  toString: -> 'Base'\n\n  log: (msg, type) ->\n    return unless @debug\n    type = type or 'info'\n    if window.console and window.console[type]\n      window.console[type] \"[#{@toString()}] #{msg}\"\n    return\n\n  on: (type, callback) ->\n    if !type or !callback\n      throw new Error('Both event type and callback are required parameters')\n    @log 'on() - event \\'' + type + '\\' is subscribed'\n    @_listeners[type] = [] unless @_listeners[type]\n    callback.instance = @\n    @_listeners[type].push(callback)\n    callback\n\n  emit: (type, data = []) ->\n    @log \"emit() - event '#{type}' is triggered\"\n    data.unshift\n      type: type\n      target: @\n    throw new Error('Lacks of type parameter') unless type\n    if @_listeners[type] and @_listeners[type].length\n      for i of @_listeners[type]\n        @_listeners[type][i].apply @, data\n    @\n\n  getParams: (key) ->\n    href = @getUrl()\n    params = {}\n    pos = href.indexOf('?')\n    @log 'getParams() is executed'\n    if href.indexOf('#') != -1\n      hashes = href.slice(pos + 1, href.indexOf('#')).split('&')\n    else\n      hashes = href.slice(pos + 1).split('&')\n    for i of hashes\n      hash = hashes[i].split('=')\n      params[hash[0]] = hash[1]\n    if key then params[key] else params\n\n  getUrl: -> window.location.href\n\n# Promote to global\nwindow.Stackla = {} unless window.Stackla\nwindow.Stackla.Base = Base\n\nmodule.exports = Base\n\n","Mustache = require('mustache')\nBase = require('./base.coffee')\n\nATTRS =\n  NAME: 'Tagla'\n  PREFIX: 'tagla-'\n  DRAG_ATTR:\n    containment: '.tagla'\n    handle: '.tagla-icon'\n  SELECT_ATTR:\n    allow_single_deselect: on\n    placeholder_text_single: 'Select an option'\n    width: '310px'\n  FORM_TEMPLATE: [\n    '<div class=\"tagla-form-wrapper\">'\n    '    <form class=\"tagla-form\">'\n    '        <div class=\"tagla-form-title\">'\n    '            Select Your Product'\n    '            <a href=\"javascript:void(0);\" class=\"tagla-form-close\">×</a>'\n    '        </div>'\n    '        <input type=\"hidden\" name=\"x\">'\n    '        <input type=\"hidden\" name=\"y\">'\n    '        <select data-placeholder=\"Search\" type=\"text\" name=\"tag\" class=\"tagla-select chosen-select\" placeholder=\"Search\">'\n    '            <option></option>'\n    '            <option value=\"1\">Cockie</option>'\n    '            <option value=\"2\">Kiwi</option>'\n    '            <option value=\"3\">Buddy</option>'\n    '        </select>'\n    '    </form>'\n    '</div>'\n  ].join('\\n')\n  TAG_TEMPLATE: [\n    '<div class=\"tagla-tag\">'\n    '    <i class=\"tagla-icon fs fs-tag2\"></i>'\n    '    <div class=\"tagla-dialog\">'\n    '    {{#product}}'\n    '        {{#image_small_url}}'\n    '        <div class=\"tagla-dialog-image\">'\n    '          <img src=\"{{image_small_url}}\">'\n    '        </div>'\n    '        {{/image_small_url}}'\n    '        <div class=\"tagla-dialog-text\">'\n    '          <div class=\"tagla-dialog-edit\">'\n    '            <a href=\"javascript:void(0)\" class=\"tagla-tag-link tagla-tag-edit-link\">'\n    '              <i class=\"fs fs-pencil\"></i> Edit'\n    '            </a>'\n    '            <a href=\"javascript:void(0)\" class=\"tagla-tag-link tagla-tag-delete-link\">'\n    '              <i class=\"fs fs-cross3\"></i> Delete'\n    '            </a>'\n    '          </div>'\n    '          <h2 class=\"tagla-dialog-title\">{{tag}}</h2>'\n    '          {{#price}}'\n    '          <div class=\"tagla-dialog-price\">{{price}}</div>'\n    '          {{/price}}'\n    '          {{#description}}'\n    '          <p class=\"tagla-dialog-description\">{{description}}</p>'\n    '          {{/description}}'\n    '          {{#custom_url}}'\n    '          <a href=\"{{custom_url}}\" class=\"tagla-dialog-button st-btn st-btn-success st-btn-solid\" target=\"\"{{target}}\">'\n    '            <i class=\"fs fs-cart\"></i>'\n    '            Buy Now'\n    '          </a>'\n    '          {{/custom_url}}'\n    '        </div>'\n    '    {{/product}}'\n    '    </div>'\n    '    {{{form_html}}}'\n    '</div>'\n  ].join('\\n')\n  NEW_TAG_TEMPLATE: [\n    '<div class=\"tagla-tag\">'\n    '    <i class=\"tagla-icon fs fs-tag2\"></i>'\n    '</div>'\n  ].join('\\n')\n\nclass Tagla extends Base\n  constructor: ($wrapper, options = {}) ->\n    super()\n    @wrapper = $($wrapper)\n    @init(options)\n    @bind()\n\n$.extend(Tagla, ATTRS)\n\nproto =\n  ##############\n  # Utilities\n  ##############\n  toString: -> 'Tagla'\n\n  ##################\n  # Private Methods\n  ##################\n  # Initialize drag and select libs for a single tag\n  _applyTools: ($tag) ->\n    @log '_applyTools() is executed'\n    drag = new Draggabilly($tag[0], Tagla.DRAG_ATTR)\n    drag.on 'dragEnd', $.proxy(@handleTagMove, @)\n    $tag.data('draggabilly', drag)\n    # Update form\n    tag = $tag.data('tag-data')\n    $form = $tag.find('.tagla-form')\n    $form.find('[name=x]').val(tag.x)\n    $form.find('[name=y]').val(tag.y)\n    $form.find(\"[name=tag] option[value=#{tag.value}]\").attr('selected', 'selected')\n    $select = $tag.find('.tagla-select')\n    $select.chosen2(Tagla.SELECT_ATTR)\n    $select.on 'change', $.proxy(@handleTagChange, @)\n    $select.on 'chosen:hiding_dropdown', (e, params) ->\n      $select.trigger('chosen:open')\n\n  _disableDrag: ($except) ->\n    return if @editor is off\n    @log '_disableDrag() is executed'\n    $except = $($except)\n    $('.tagla-tag').each ->\n      return if $except[0] is @\n      $(@).data('draggabilly').disable();\n\n  _enableDrag: ($except) ->\n    return if @editor is off\n    @log '_enableDrag() is executed'\n    $except = $($except)\n    $('.tagla-tag').each ->\n      return if $except[0] is @\n      $(@).data('draggabilly').enable();\n\n  _removeTools: ($tag) ->\n    $tag.data('draggabilly').destroy()\n    $select = $tag.find('.tagla-select')\n    $select.show().removeClass 'chzn-done'\n    $select.next().remove()\n\n  _getPosition: ($tag) ->\n    @log '_getPosition() is executed'\n    pos = $tag.position()\n    x = (pos.left + ($tag.width() / 2)) / @currentWidth * @naturalWidth\n    y = (pos.top + ($tag.height() / 2)) / @currentHeight * @naturalHeight\n    if @unit is 'percent'\n      x = x / @naturalWidth * 100\n      y = y / @naturalHeight * 100\n    [x, y]\n\n  _updateImageSize: (data) ->\n    @log '_updateImageSize() is executed'\n    @naturalWidth = data.naturalWidth\n    @naturalHeight = data.naturalHeight\n    @currentWidth = data.width\n    @currentHeight = data.height\n    @widthRatio = data.widthRatio\n    @heightRatio = data.heightRatio\n\n  ####################\n  # Event Handlers\n  ####################\n  handleTagClick: (e) ->\n    e.preventDefault()\n    e.stopPropagation()\n    return unless $(e.target).hasClass('tagla-icon')\n    @log 'handleTagClick() is executed'\n    $tag = $(e.currentTarget)\n    @shrink($tag)\n    $tag.addClass('tagla-tag-active')\n    $tag.data('draggabilly').enable()\n\n  handleTagChange: (e, params) ->\n    @log 'handleTagChange() is executed'\n    $select = $(e.target)\n    $tag = $select.parents('.tagla-tag')\n    isNew = $tag.hasClass('tagla-tag-new')\n    $tag.removeClass 'tagla-tag-choose tagla-tag-active tagla-tag-new'\n    data = $.extend({}, $tag.data('tag-data'))\n    data.label = $select.find('option:selected').text()\n    data.value = $select.val() || data.label\n    serialize = $tag.find('.tagla-form').serialize()\n    if isNew\n      @emit('add', [data, serialize, $tag])\n    else\n      @emit('change', [data, serialize, $tag])\n\n  handleTagDelete: (e) ->\n    @log 'handleTagDelete() is executed'\n    e.preventDefault()\n    $tag = $(e.currentTarget).parents('.tagla-tag')\n    data = $.extend({}, $tag.data('tag-data'))\n    $tag.fadeOut =>\n      @_removeTools($tag)\n      $tag.remove()\n      @emit('delete', [data])\n\n  handleTagEdit: (e) ->\n    @log 'handleTagEdit() is executed'\n    e.preventDefault()\n    e.stopPropagation()\n    $tag = $(e.currentTarget).parents('.tagla-tag')\n    $tag.addClass('tagla-tag-choose')\n    @wrapper.addClass('tagla-editing-selecting')\n    @_disableDrag($tag)\n    $tag.find('.tagla-select').trigger('chosen:open')\n    data = $.extend({}, $tag.data('tag-data'))\n    @emit('edit', [data, $tag])\n\n  handleTagMove: (instance, event, pointer) ->\n    @log 'handleTagMove() is executed'\n\n    $tag = $(instance.element)\n    data = $tag.data('tag-data')\n    pos = @_getPosition($tag)\n    data.x = pos[0]\n    data.y = pos[1]\n\n    $form = $tag.find('.tagla-form')\n    $form.find('[name=x]').val(data.x)\n    $form.find('[name=y]').val(data.y)\n    serialize = $tag.find('.tagla-form').serialize()\n\n    @lastDragTime = new Date()\n    data = $.extend({}, data)\n    isNew = if data.id then no else yes\n    @emit('move', [data, serialize, $tag, isNew])\n\n  handleTagMouseEnter: (e) ->\n    @log 'handleTagMouseEnter'\n    $tag = $(e.currentTarget)\n\n    # Clear delayed leave timer\n    timer =  $tag.data('timer')\n    clearTimeout(timer) if timer\n    $tag.removeData('timer')\n\n    $tag.addClass('tagla-tag-hover')\n    @emit('hover', [$tag])\n\n  handleTagMouseLeave: (e) ->\n    @log 'handleTagMouseLeave'\n    $tag = $(e.currentTarget)\n\n    # Clear delayed leave timer\n    timer = $tag.data('timer')\n    clearTimeout(timer) if timer\n    $tag.removeData('timer')\n\n    # Save delayed leave timer\n    timer = setTimeout ->\n      $tag.removeClass('tagla-tag-hover')\n    , 300\n    $tag.data('timer', timer)\n\n  handleWrapperClick: (e) ->\n    @log 'handleWrapperClick() is executed'\n    # Hack to avoid triggering click event\n    @shrink() if (new Date() - @lastDragTime > 10)\n\n  handleImageResize: (e, data) ->\n    @log 'handleImageResize() is executed'\n    prevWidth = @currentWidth\n    prevHeight = @currentHeight\n    $('.tagla-tag').each ->\n      $tag = $(@)\n      pos = $tag.position()\n      x = (pos.left / prevWidth) * data.width\n      y = (pos.top / prevHeight) * data.height\n      $tag.css\n        left: \"#{x}px\"\n        top: \"#{y}px\"\n    @_updateImageSize(data)\n\n  ####################\n  # Public Methods\n  ####################\n  addTag: (tag = {}) ->\n    @log 'addTag() is executed'\n    # Render tag element by provided template\n    tag = $.extend({}, tag)\n    tag.form_html = @formHtml\n    $tag = $(Mustache.render(@tagTemplate, tag))\n    isNew = (!tag.x and !tag.y)\n\n    # Remove previous added new tag if it hasn't being set\n    if isNew\n      $('.tagla-tag').each ->\n        if $(@).hasClass('tagla-tag-new') and !$(@).find('[name=tag]').val()\n          $(@).fadeOut =>\n            @_removeTools($tag)\n\n    @wrapper.append($tag)\n    if isNew # Default position for new tag\n      # TODO - Need a smart way to avoid collision\n      tag.x = 50\n      tag.y = 50\n      $tag.addClass 'tagla-tag-new tagla-tag-active tagla-tag-choose'\n    if @unit is 'percent'\n      x = @currentWidth * (tag.x / 100)\n      y = @currentHeight * (tag.y / 100)\n    else\n      x = tag.x * @widthRatio\n      y = tag.y * @heightRatio\n    offsetX = $tag.outerWidth() / 2\n    offsetY = $tag.outerHeight() / 2\n    $tag.css\n      'left': \"#{x - offsetX}px\"\n      'top': \"#{y - offsetY}px\"\n    # Save tag data to data attr for easy access\n    $tag.data('tag-data', tag)\n    # Render tag editor tools\n    if @editor\n      @_applyTools($tag)\n      if isNew\n        $tag.data('draggabilly').enable()\n        $tag.addClass('tagla-tag-choose')\n        setTimeout =>\n          @wrapper.addClass('tagla-editing-selecting')\n          $tag.find('.tagla-select').trigger 'chosen:open'\n          @_disableDrag($tag)\n          @emit('new', [$tag])\n        , 100\n\n  deleteTag: ($tag) ->\n    @log 'deleteTag() is executed'\n\n  edit: ->\n    return if @editor is on\n    @log 'edit() is executed'\n    @wrapper.addClass('tagla-editing')\n    $('.tagla-tag').each -> @_applyTools($(@))\n    @editor = on\n\n  getTags: ->\n    @log 'getTags() is executed'\n    tags = []\n    $('.tagla-tag').each ->\n      data = $.extend({}, $(@).data('tag-data'))\n      tags.push $(@).data('tag-data')\n    tags\n\n  # Shrink everything except the $except\n  shrink: ($except = null) ->\n    return if @editor is off\n    @log 'shrink() is executed'\n    $except = $($except)\n    $('.tagla-tag').each (i, el) =>\n      return if $except[0] is el\n      $tag = $(el)\n      if $tag.hasClass('tagla-tag-new') and !$tag.find('[name=tag]').val()\n        $tag.fadeOut =>\n          $tag.remove()\n          @_removeTools($tag)\n      $tag.removeClass 'tagla-tag-active tagla-tag-choose'\n    @wrapper.removeClass 'tagla-editing-selecting'\n    @_enableDrag()\n\n  updateDialog: ($tag, data) ->\n    data = $.extend({}, $tag.data('tag-data'), data)\n    data.form_html = @formHtml\n    html = $(Mustache.render(@tagTemplate, data)).find('.tagla-dialog').html()\n    $tag.find('.tagla-dialog').html(html)\n    $tag.data('tag-data', data)\n\n  unedit: ->\n    return if @edit is off\n    @log 'unedit() is executed'\n    $('.tagla-tag').each (i, el) =>\n      @_removeTools($(el))\n    @wrapper.removeClass 'tagla-editing'\n    @editor = off\n\n  ####################\n  # Lifecycle Methods\n  ####################\n  init: (options) ->\n    # Configure Options\n    @data = options.data || []\n    @editor = (options.editor is on) ? on : false\n    @formHtml = if options.form then $(options.form) else $(Tagla.FORM_TEMPLATE)\n    @formHtml = @formHtml.html()\n    @tagTemplate = if options.tagTemplate then $(options.tagTemplate).html() else Tagla.TAG_TEMPLATE\n    @unit = if options.unit is 'percent' then 'percent' else 'pixel'\n    # Attributes\n    @imageSize = null\n    @image = @wrapper.find('img')\n    @lastDragTime = new Date()\n\n  bind: ->\n    @log 'bind() is executed'\n    @wrapper\n      .on 'mouseenter', $.proxy(@handleMouseEnter, @)\n      .on 'click', $.proxy(@handleWrapperClick, @)\n      .on 'click', '.tagla-tag-edit-link', $.proxy(@handleTagEdit, @)\n      .on 'click', '.tagla-tag-delete-link', $.proxy(@handleTagDelete, @)\n      .on 'mouseenter', '.tagla-tag', $.proxy(@handleTagMouseEnter, @)\n      .on 'mouseleave', '.tagla-tag', $.proxy(@handleTagMouseLeave, @)\n\n  render: ->\n    @log 'render() is executed'\n    @image.attr('draggable', false)\n    @imageSize = Stackla.getImageSize(@image, $.proxy(@renderFn, @))\n    @imageSize.on('change', $.proxy(@handleImageResize, @))\n\n  renderFn: (success, data) ->\n    @log 'renderFn() is executed'\n    isSafari = /Safari/.test(navigator.userAgent) and\n               /Apple Computer/.test(navigator.vendor)\n    unless success # Stop if image is failed to load\n      @log(\"Failed to load image: #{@image.attr('src')}\", 'error')\n      @destroy()\n      return\n    @_updateImageSize(data) # Save dimension\n    @wrapper.addClass 'tagla' # Apply necessary class names\n    @wrapper.addClass 'tagla-safari' if isSafari # Avoid animation\n    @addTag tag for tag in @data # Create tags\n    setTimeout =>\n      @wrapper.addClass 'tagla-editing' if @editor\n      @emit('ready', [@])\n    , 500\n\n  destroy: ->\n    @log 'destroy() is executed'\n    @wrapper.removeClass 'tagla tagla-editing'\n    @wrapper.find('.tagla-tag').each ->\n      $tag = $(@)\n      $tag.find('.tagla-select').chosen2 'destroy'\n      $tag.data('draggabilly').destroy()\n      $tag.remove()\n\n$.extend(Tagla::, proto)\nwindow.Stackla = {} unless window.Stackla\nwindow.Stackla.Tagla = Tagla\n\n"]}