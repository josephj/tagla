(function() {
  var Tagla, proto,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __hasProp = {}.hasOwnProperty;

  Tagla = (function(_super) {
    __extends(Tagla, _super);

    function Tagla($wrapper, options) {
      if (options == null) {
        options = {};
      }
      this.wrapper = $($wrapper);
      this.init(options);
      this.bind();
    }

    return Tagla;

  })(Stackla.Base);

  Tagla.NAME = 'Tagla';

  Tagla.PREFIX = 'tagla-';

  Tagla.FORM_TEMPLATE = ['<form class="tagla-form">', '    <input type="hidden" name="x">', '    <input type="hidden" name="y">', '    <select data-placeholder="Search" type="text" name="label" class="tagla-select chosen-select" placeholder="Search">', '        <option>Frankie Issue #6</option>', '        <option>Frankie Wall Calendar 2015</option>', '        <option>Frankie A5 Daily Planner</option>', '    </select>', '</form>'].join('\n');

  Tagla.TAG_TEMPLATE = ['<div class="tagla-tag">', '    <i class="tagla-icon fs fs-tag"></i>', '    <span class="tagla-label">', '      {{label}}', '      <a href="javascript:void(0)" class="tagla-tag-link tagla-tag-edit-link">', '        <i class="fs fs-pencil"></i> Edit', '      </a>', '      <a href="javascript:void(0)" class="tagla-tag-link tagla-tag-delete-link">', '        <i class="fs fs-cross3"></i> Delete', '      </a>', '    </span>', '    <div class="tagla-dialog">', '        {{#image}}', '        <div class="tagla-dialog-image">', '          <img src="{{image}}">', '        </div>', '        {{/image}}', '        <div class="tagla-dialog-text">', '          <h2 class="tagla-dialog-title">{{label}}</h2>', '          <div class="tagla-dialog-price">{{price}}</div>', '          <p class="tagla-dialog-description">{{description}}</p>', '          <a href="{{url}}" class="tagla-dialog-button st-btn st-btn-success st-btn-solid">', '            <i class="fs fs-cart"></i>', '            Buy Now', '          </a>', '        </div>', '    </div>', "    " + Tagla.FORM_TEMPLATE, '</div>'].join('\n');

  Tagla.NEW_TAG_TEMPLATE = ['<div class="tagla-tag">', '    <i class="tagla-icon fs fs-tag"></i>', '    <span class="tagla-label">{{label}}</span>', '</div>'].join('\n');

  Tagla.DRAG_ATTR = {
    containment: '.tagla',
    handle: '.tagla-icon'
  };

  Tagla.SELECT_ATTR = {
    placeholder_text_single: 'Select an option',
    width: '310px'
  };

  proto = {
    formatFloat: function(num, pos) {
      var size;
      size = Math.pow(10, pos);
      return Math.round(num * size) / size;
    },
    toString: function() {
      return 'Tagla';
    },
    _applyTools: function($tag) {
      var drag;
      drag = new Draggabilly($tag[0], Tagla.DRAG_ATTR);
      drag.disable();
      $tag.data('draggabilly', drag);
      return $tag.find('.tagla-select').chosen(Tagla.SELECT_ATTR);
    },
    _removeTools: function($tag) {
      var $select;
      $tag.data('draggabilly').destroy();
      $select = $tag.find('.tagla-select');
      $select.show().removeClass('chzn-done');
      return $select.next().remove();
    },
    updateImageSize: function() {
      var image;
      this.log('updateImageSize() is executed');
      image = this.image[0];
      this.currentWidth = image.width;
      this.currentHeight = image.height;
      this.widthRatio = this.currentWidth / this.naturalWidth;
      return this.heightRatio = this.currentHeight / this.naturalHeight;
    },
    handleImageError: function(e) {
      this.log('handleImageError() is executed');
      this.imageLoaded = false;
      return this.destroy();
    },
    handleImageLoad: function(e) {
      this.log('handleImageLoad() is executed');
      this.imageLoaded = true;
      this.naturalWidth = this.image[0].width;
      this.naturalHeight = this.image[0].height;
      this.updateImageSize();
      return this.render();
    },
    handleTagClick: function(e) {
      var $tag;
      this.log('handleTagClick() is executed');
      e.preventDefault();
      e.stopPropagation();
      $tag = $(e.currentTarget);
      $('.tagla-tag').each(function() {
        if (this !== $tag[0]) {
          $(this).removeClass('tagla-tag-active');
          $(this).removeClass('tagla-tag-choose');
          return $(this).data('draggabilly').disable();
        }
      });
      $tag.addClass('tagla-tag-active');
      return $tag.data('draggabilly').enable();
    },
    handleTagDelete: function(e) {
      var $tag, instance;
      this.log('handleTagDelete() is executed');
      e.preventDefault();
      $tag = $(e.currentTarget).parents('.tagla-tag');
      $tag.remove();
      instance = $tag.data('draggabilly');
      if (instance) {
        instance.destroy();
      }
      return $(document).trigger('tagla:delete', $tag.data('tag-data'));
    },
    handleTagEdit: function(e) {
      var $tag;
      this.log('handleTagDelete() is executed');
      e.preventDefault();
      $tag = $(e.currentTarget).parents('.tagla-tag');
      $tag.addClass('tagla-tag-choose');
      $tag.find('.tagla-select').trigger('chosen:open');
      $tag.find('.tagla-select').on('change', function(e) {
        return $tag.removeClass('tagla-tag-choose tagla-tag-active');
      });
      return $(document).trigger('tagla:edit', $tag.data('tag-data'));
    },
    handleWrapperClick: function(e) {
      this.log('handleWrapperClick() is executed');
      return $('.tagla-tag').each(function() {
        $(this).removeClass('tagla-tag-active');
        return $(this).data('draggabilly').disable();
      });
    },
    handleWindowResize: function(e) {
      var image;
      this.log('handleImageResize() is executed');
      image = this.image[0];
      if (image.width === this.currentWidth && image.height === this.currentHeight) {
        return;
      }
      $('.tagla-tag').each((function(_this) {
        return function(i, el) {
          var $tag, pos, x, y;
          $tag = $(el);
          pos = $tag.position();
          x = (pos.left / _this.currentWidth) * _this.image.width();
          y = (pos.top / _this.currentHeight) * _this.image.height();
          return $tag.css({
            left: x + "px",
            top: y + "px"
          });
        };
      })(this));
      return this.updateImageSize();
    },
    addTag: function(tag) {
      var $tag, offsetX, offsetY, x, y;
      this.log('addTag() is executed');
      $tag = $(Mustache.render(this.tagTemplate, tag));
      this.wrapper.append($tag);
      tag.x = tag.x || 50;
      tag.y = tag.y || 50;
      x = this.wrapper.width() * (tag.x / 100);
      y = this.wrapper.height() * (tag.y / 100);
      offsetX = $tag.outerWidth() / 2;
      offsetY = $tag.outerHeight() / 2;
      $tag.css({
        left: (x - offsetX) + "px",
        top: (y - offsetY) + "px"
      });
      $tag.data('tag-data', tag);
      if (this.editor) {
        return this._applyTools($tag);
      }
    },
    deleteTag: function($tag) {
      return this.log('deleteTag() is executed');
    },
    edit: function() {
      if (this.editor === true) {
        return;
      }
      this.log('edit() is executed');
      this.wrapper.addClass('tagla-editing');
      $('.tagla-tag').each(function() {
        return this._applyTools($(this));
      });
      return this.editor = true;
    },
    unedit: function() {
      if (this.edit === false) {
        return;
      }
      this.log('unedit() is executed');
      $('.tagla-tag').each(function() {
        return this._removeTools($(this));
      });
      this.wrapper.removeClass('tagla-editing');
      return this.editor = false;
    },
    init: function(options) {
      var _ref;
      this.data = options.data || [];
      this.editor = (_ref = options.editor === true) != null ? _ref : {
        on: false
      };
      this.form = options.form ? $(options.form) : Tagla.FORM_TEMPLATE;
      this.tagTemplate = options.tagTemplate ? $(options.tagTemplate).html() : Tagla.TAG_TEMPLATE;
      this.debug = true;
      this.image = this.wrapper.find('img');
      this.imageLoaded = this.image[0].complete;
      this.currentWidth = this.image[0].width;
      return this.currentHeight = this.image[0].height;
    },
    bind: function() {
      this.log('bind() is executed');
      this.wrapper.on('mouseenter', $.proxy(this.handleMouseEnter, this)).on('click', $.proxy(this.handleWrapperClick, this)).on('click', '.tagla-tag', $.proxy(this.handleTagClick, this)).on('click', '.tagla-tag-edit-link', $.proxy(this.handleTagEdit, this)).on('click', '.tagla-tag-delete-link', $.proxy(this.handleTagDelete, this));
      return $(window).resize($.proxy(this.handleWindowResize, this));
    },
    render: function() {
      var img, tag, _i, _len, _ref, _results;
      if (!this.imageLoaded) {
        img = new Image();
        img.src = this.image.attr('src');
        $(img).one('load', $.proxy(this.handleImageLoad, this)).one('error', $.proxy(this.handleImageError, this));
        return;
      }
      this.log('render() is executed');
      this.wrapper.addClass('tagla');
      if (this.editor) {
        this.wrapper.addClass('tagla-editing');
      }
      _ref = this.data;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        tag = _ref[_i];
        _results.push(this.addTag(tag));
      }
      return _results;
    },
    destroy: function() {
      return this.log('destroy() is executed');
    }
  };

  $.extend(Tagla.prototype, proto);

  if (!window.Stackla) {
    window.Stackla = {};
  }

  window.Stackla.Tagla = Tagla;


  /*
        @wrapper.find('.tagla-select').each ->
          $(@).chosen
            placeholder_text_single: "Select an option"
            width: '310px'
          chosen = $(@).chosen().data('chosen')
          autoClose = false
          chosen_resultSelect_fn = chosen.result_select
          chosen.search_contains = true
          chosen.result_select = (evt) ->
            resultHighlight = null
            unless autoClose
              evt['metaKey'] = true
              evt['ctrlKey'] = true
              resultHighlight = chosen.result_highlight
            stext = chosen.get_search_text()
            result = chosen_resultSelect_fn.call(chosen, evt)
  
            if autoClose is off && resultHighlight != null
              resultHighlight.addClass('result-selected')
  
            @search_field.val(stext)
            @winnow_results()
            @search_field_scale()
            result
   */

}).call(this);

//# sourceMappingURL=data:application/json;base64,